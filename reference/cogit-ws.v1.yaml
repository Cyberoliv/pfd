openapi: 3.0.0
info:
  title: cogit
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /briques:
    get:
      summary: Liste des briques
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: brique
                type: array
                x-examples:
                  cokpit:
                    projectKey: cokpit
                    repoName: cokpit
                    repoSlug: cokpit
                  portik:
                    projectKey: TEAM_PFD
                    repoName: portik
                    repoSlug: portik
                  amir:
                    projectKey: AMIR
                    repoName: amir
                    repoSlug: amir
                description: Brique au sens cogit
                items:
                  $ref: '#/components/schemas/Brique'
      operationId: get-briques
      description: Liste toutes les briques de Bitbucket
      parameters: []
  '/{projectKey}/{repoSlug}/versions':
    get:
      summary: "Liste les versions d'une brique (repo)"
      tags: []
      responses:
        '200':
          description: OK
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/parentVersion'
              examples:
                example-1: {}
      operationId: get-versions
      description: 'Recherche les versions "parent (Release ?)" + toutes les versions associées'
    parameters:
      - schema:
          type: string
        name: projectKey
        in: path
        description: Clé du projet
      - schema:
          type: string
        name: repoSlug
        in: path
        description: 'Slug du repo ("Friendly name")'
  '/{projectKey}/{repoSlug}/branches':
    parameters:
      - schema:
          type: string
        name: projectKey
        in: path
        required: true
      - schema:
          type: string
        name: repoSlug
        in: path
        required: true
    get:
      summary: "Liste les branche d'une brique (repo)"
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branche'
              examples:
                example-1: {}
      operationId: get-projectKey-repoSlug-branches
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: ''
components:
  schemas:
    Brique:
      title: Brique
      type: object
      x-examples:
        cokpit:
          name: cokpit
        portik:
          name: portik
        amir:
          name: amir
        example-4: {}
      description: Brique au sens cogit
      properties:
        name:
          type: string
          description: Clé du projet dans BitBucket
    parentVersion:
      title: parentVersion
      type: object
      x-examples:
        '1.37':
          name: '1.37'
          versions:
            - name: 1.37.0-a1
              date: '20201801'
              lifeCycle: '??'
              branch: develop
              currentCycle: alpha
              firstVersion: '1.37'
              hasVBD: true
              description: Lalalala description 1
            - name: 1.37.0-rc1
              date: '20201804'
              lifeCycle: '??'
              branch: develop
              currentCycle: release
              firstVersion: '1.37'
              hasVBD: true
              description: Lalalala description 2
            - name: 1.37.0
              date: '20201806'
              lifeCycle: '??'
              branch: mastser
              currentCycle: alpha
              firstVersion: '1.37'
              hasVBD: true
              description: Lalalala description 3
      description: "Modèle d'une version X.Y"
      properties:
        name:
          type: string
          description: Nom au format X.Y
        versions:
          type: array
          description: Liste de toutes les versions associées à la X.Y
          items:
            $ref: '#/components/schemas/version'
    version:
      title: version
      type: object
      description: ''
      properties:
        name:
          type: string
        date:
          type: string
        lifeCycle:
          type: string
        branch:
          type: string
        currentCycle:
          type: string
        firstVersion:
          type: string
        hasVBD:
          type: boolean
        description:
          type: string
    Branche:
      title: Branche
      type: object
      properties:
        id:
          type: string
          description: ID Bitbuket de la branche
        displayId:
          type: string
          description: "Nom d'affichage"
      x-examples:
        Develop:
          id: refs/heads/develop
          displayId: develop
        Master:
          id: refs/heads/master
          displayId: master
        Feature Cokpit:
          id: refs/heads/feature/COK-593-mise-en-oeuvre-abandon-de-version
          displayId: feature/COK-593-mise-en-oeuvre-abandon-de-version
      description: "Représentation d'une branche Bitbucket"
    Page:
      title: Page
      type: object
      description: Modèle de la Class Page
      properties:
        size:
          type: integer
          description: ''
        limit:
          type: integer
          description: ''
        isLastPage:
          type: boolean
          description: ''
        start:
          type: integer
          description: ''
        nextPageStart:
          type: integer
          description: ''
    BranchePage:
      title: BranchePage
      type: object
      x-examples: {}
      properties:
        size:
          type: integer
          description: Nombre de branches sur la page
        limit:
          type: integer
          description: Limite de branches par page
        isLastPage:
          type: boolean
          description: "Affiche si c'est la dernière page"
        start:
          type: integer
          description: Affiche à partir de quelle branche la page commence
        nextPageStart:
          type: integer
          description: Affiche à partir de quelle branche la page porchaine page commence
        values:
          type: array
          items:
            $ref: '#/components/schemas/Branche'
      description: Représentation de la Class BranchePage
    PullRequest:
      title: PullRequest
      type: object
      properties:
        id:
          type: integer
          description: ID de la pull-request
        titre:
          type: string
          description: Titre de la pull-request
        description:
          type: string
          description: description de la pull-resquest
        etat:
          type: string
          description: etat de la pull-request
        dateCreation:
          type: number
          description: date de creation
        source:
          type: string
          description: "d'où provient la pull-request"
        destination:
          type: string
          description: vers où va la pull-request
      description: Modèle de la Pull-Request
      x-examples:
        Pull-request DAI:
          id: 2
          title: ajout squelette DAI avec services SOAP
          description: Ajout squelette DAI avec services SOAP
          state: OPEN
          createdDate: '1583511882287'
          fromRef:
            displayId: init
          toRef:
            displayId: develop
        Pull-request Demo_git:
          id: 11
          title: Release/1.1
          description: "* add a common feature\r\n* add an amaury feature\r\n* WEB-5196"
          state: OPEN
          createdDate: '1576846770753'
          fromRef:
            displayId: release/1.1
          toRef:
            displayId: master
    PullRequestPage:
      title: PullRequestPage
      type: object
      properties:
        size:
          type: integer
        limit:
          type: integer
        isLastPage:
          type: boolean
        start:
          type: integer
        nextPageStart:
          type: integer
        values:
          type: array
          items:
            $ref: '#/components/schemas/PullRequest'
      description: Représentation de la Class PullRequestPage
    BriquePage:
      title: BriquePage
      type: object
      properties:
        size:
          type: integer
          description: Affiche le nombre de brique sur le page
        limit:
          type: integer
          description: Affiche la limite de brique par page
        isLastPage:
          type: boolean
          description: "Affiche si c'est la dernière page"
        start:
          type: integer
          description: Affiche par quelle brique commence la page
        nextPageStart:
          type: integer
          description: Affiche par quelle brique commence la prochaine page
        values:
          type: array
          items:
            $ref: '#/components/schemas/Brique'
      description: ''
    VersionPage:
      title: VersionPage
      type: object
      description: Représentation de la Class VersionPage
      properties:
        size:
          type: integer
          description: ''
        limit:
          type: integer
        isLastPage:
          type: boolean
        start:
          type: integer
        nextPageStart:
          type: integer
        values:
          type: array
          items:
            $ref: '#/components/schemas/parentVersion'
    Project:
      title: Project
      type: object
      description: Class appartenant au package Brique
      properties:
        key:
          type: string
          description: "Affiche l'id le nom du projet"
        name:
          type: string
          description: Affiche le nom du projet
    Clone:
      title: Clone
      type: object
      description: "Class permettant d'afficher le lien clone d'une brique"
      properties:
        href:
          type: string
          description: Affiche le lien du Clone
        name:
          type: string
          description: Affiche le nom du clone
      x-examples:
        Clone projet Amir:
          href: 'https://bdsbbu-h.retraite.aa/scm/amir/amir.git'
          name: http
    BrancheData:
      title: BrancheData
      type: object
      properties:
        id:
          type: string
        displayId:
          type: string
    Reference:
      title: Reference
      type: object
      description: "Pull-Requests Data, permet d'afficher l'id de la PR"
      properties:
        displayId:
          type: string
    LinkDef:
      title: LinkDef
      type: object
      description: Class appartenant au model brique
      properties:
        href:
          type: string
        name:
          type: string
    Self:
      title: Self
      type: object
      description: "Class permettant d'afficher le lien self d'un projet"
      x-examples:
        Self projet Amir:
          rel: self
          href: 'https://bdsbbu-h.retraite.aa/projects/AMIR/repos/amir/browse'
      properties:
        href:
          type: string
          description: affiche le lien self
  securitySchemes:
    Test pour voir:
      type: http
      scheme: basic
