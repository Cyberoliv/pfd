openapi: 3.0.0
info:
  title: cogit
  version: '1.0'
  contact:
    name: 'Penthai & Olivier'
  description: "Passerelle d'échange entre l'IHM et les autres outils (Bitbucket & Jira)"
servers:
  - url: 'http://localhost:3000'
tags:
  - name: cogit
paths:
  /briques:
    get:
      summary: Liste des briques
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: brique
                type: array
                x-examples:
                  cokpit:
                    projectKey: cokpit
                    repoName: cokpit
                    repoSlug: cokpit
                  portik:
                    projectKey: TEAM_PFD
                    repoName: portik
                    repoSlug: portik
                  amir:
                    projectKey: AMIR
                    repoName: amir
                    repoSlug: amir
                description: Brique au sens cogit
                items:
                  $ref: '#/components/schemas/Brique'
              examples:
                briques:
                  value:
                    - name: cokpit
                    - name: ota
                    - name: formation
                    - name: démo
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      operationId: get-briques
      description: Liste toutes les briques de Bitbucket (repos)
      parameters:
        - schema:
            type: string
            enum:
              - READ
              - WRITE
              - ADMIN
          in: query
          name: permission
          description: Droits sur les repos
          allowEmptyValue: true
    parameters: []
  '/projects/{projectKey}/repos/{repoSlug}/versions':
    get:
      summary: "Liste les versions d'une brique (repo)"
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParentVersion'
              examples:
                versions:
                  value:
                    - name: 1.37.2
                      createdDate: 0
                      lifeCycle: null
                      currentCycle: null
                      description: ''
                    - name: 1.37.1
                      createdDate: 0
                      lifeCycle: null
                      currentCycle: null
                      description: ''
                    - name: 1.37.0
                      createdDate: 0
                      lifeCycle: null
                      currentCycle: null
                      description: ''
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
              examples: {}
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      operationId: get-versions
      description: 'Recherche les versions "parent (Release ?)" + toutes les versions associées'
    parameters:
      - schema:
          type: string
        name: projectKey
        in: path
        description: Clé du projet
        required: true
      - schema:
          type: string
        name: repoSlug
        in: path
        description: 'Slug du repo ("Friendly name")'
        required: true
  '/projects/{projectKey}/repos/{repoSlug}/branches':
    parameters:
      - schema:
          type: string
        name: projectKey
        in: path
        required: true
        description: Clé du projet
      - schema:
          type: string
        name: repoSlug
        in: path
        required: true
        description: 'Slug du repo ("Friendly name")'
    get:
      summary: "Liste les branches d'une brique (repo)"
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
              examples:
                branches:
                  value:
                    - id: refs/heads/develop
                      displayId: develop
                    - id: refs/heads/feature/dev
                      displayId: feature/dev
                    - id: refs/heads/master
                      displayId: master
                    - id: refs/heads/feature/COK-599-montee-de-version-du-socle
                      displayId: feature/COK-599-montee-de-version-du-socle
                    - id: refs/heads/feature/dev1
                      displayId: feature/dev1
                    - id: refs/heads/feature/COK-600-point-sur-les-vbds
                      displayId: feature/COK-600-point-sur-les-vbds
        '204':
          description: No Content
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      operationId: get-projectKey-repoSlug-branches
      description: "Liste les branches d'une brique (repo)"
  '/projects/{projectKey}/repos/{repoSlug}/pull-requests':
    get:
      summary: Liste les Pull-Requests
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PullRequest'
              examples:
                pull-requests:
                  value:
                    - id: 54
                      title: Feature/OTA-554
                      description: ''
                      state: OPEN
                      createdDate: 1583229634033
                      fromRef: feature/OTA-554
                      toRef: develop
                    - id: 29
                      title: test
                      description: ''
                      state: OPEN
                      createdDate: 1567007057310
                      fromRef: feature/test-create-task
                      toRef: master
                    - id: 13
                      title: feature-1
                      description: ''
                      state: OPEN
                      createdDate: 1587730341584
                      fromRef: feature/feature-1
                      toRef: develop
        '204':
          description: No content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      operationId: get-pull-requests
      description: Liste toutes les pull-requests
      security:
        - Basic Auth: []
    parameters:
      - schema:
          type: string
        name: projectKey
        in: path
        required: true
        description: Clé du projet
      - schema:
          type: string
        name: repoSlug
        in: path
        required: true
        description: 'Slug du repo ("Friendly name")'
  /issues:
    get:
      summary: Liste de tickets Jira
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
              examples:
                issues:
                  value:
                    - id: 151317
                      key: ZDUP-59
                      fields:
                        priority:
                          iconUrl: 'https://jira-h.retraite.aa/images/icons/priorities/critical.svg'
                          name: 1 - Critique
                        issuetype:
                          iconUrl: 'https://jira-h.retraite.aa/secure/viewavatar?size=xsmall&avatarId=12815&avatarType=issuetype'
                          name: Récit
                        status:
                          iconUrl: 'https://jira-h.retraite.aa/images/icons/statuses/generic.png'
                          name: Terminée
        '201':
          description: Created
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      operationId: get-tickets
      description: Liste de tickets Jira
    parameters: []
components:
  schemas:
    Brique:
      title: Brique
      type: object
      x-examples:
        cokpit:
          name: cokpit
        portik:
          name: portik
        amir:
          name: amir
      description: Brique au sens cogit
      properties:
        name:
          type: string
          description: Clé du projet dans BitBucket
    ParentVersion:
      title: ParentVersion
      type: object
      x-examples:
        '1.37':
          name: '1.37'
          versions:
            - name: 1.37.0-a1
              createdDate: '20201801'
              lifeCycle: Alpha
              currentCycle: a1
              description: Lalalala description 1
            - name: 1.37.0-rc3
              createdDate: '20201804'
              lifeCycle: Release Candidate
              currentCycle: rc3
              description: Lalalala description 2
            - name: 1.37.0
              createdDate: '20201806'
              lifeCycle: Livrée
              currentCycle: ''
              description: Lalalala description 3
      description: "Modèle d'une version X.Y\n+ Toutes ses versions \n   - X.Y.Z-aNN \n   - X.Y.Z-rcNN \n   - X.Y.Z"
      properties:
        name:
          type: string
          description: Nom au format X.Y
        versions:
          type: array
          description: Liste de toutes les versions associées à la X.Y
          items:
            $ref: '#/components/schemas/Version'
    Version:
      title: Version
      type: object
      description: "Détail d'une version"
      x-examples:
        Version Alpha:
          name: 1.37.0-a1
          createdDate: '20201801'
          lifeCycle: Alpha
          currentCycle: a1
          description: Lalalala description 1
        Version RC:
          name: 1.37.0-rc3
          createdDate: '20201804'
          lifeCycle: Release Candidate
          currentCycle: rc3
          description: Lalalala description 2
        Livrée:
          name: 1.37.0
          createdDate: '20201806'
          lifeCycle: Livrée
          currentCycle: ''
          description: Lalalala description 3
      properties:
        name:
          type: string
        createdDate:
          type: integer
          description: Date à laquelle a été posé le TAG dans GIT
          format: int64
        lifeCycle:
          type: string
        currentCycle:
          type: string
        description:
          type: string
    Branch:
      title: Branch
      type: object
      x-examples:
        Develop:
          id: refs/heads/develop
          displayId: develop
        Master:
          id: refs/heads/master
          displayId: master
        Feature Cokpit:
          id: refs/heads/feature/COK-593-mise-en-oeuvre-abandon-de-version
          displayId: feature/COK-593-mise-en-oeuvre-abandon-de-version
      description: "Représentation d'une branche"
      properties:
        id:
          type: string
          description: ID Bitbuket de la branche
        displayId:
          type: string
          description: "Nom d'affichage"
    PullRequest:
      title: PullRequest
      type: object
      description: Modèle de la Pull-Request
      x-examples:
        Pull-request Cokpit:
          id: 41
          title: Feature/COK-540 new artifactory filtrage et mise a jour des pom
          description: "* COK-540: [New Artifactory] Filtrage et mise à jour des pom\n\n    Task-Url: https://jira.retraite.aa/browse/COK-540\n\nJ'ai supprimé l'antérieur car j'ai changé ce que j'avait fait. \nMerci pour vos commentaires, c'est plus simple maintenant."
          state: OPEN
          createdDate: '2020-06-23'
          fromRef: feature/COK-540-new-artifactory-filtrage-et-mise-a-jour-des-pom
          toRef: develop
        Pull-request Demo_git:
          id: 11
          title: Release/1.1
          description: "* add a common feature\r\n* add an amaury feature\r\n* WEB-5196"
          state: OPEN
          createdDate: '2020-06-23'
          fromRef: release/1.1
          toRef: master
      properties:
        id:
          type: integer
          description: ID de la pull-request
        title:
          type: string
          description: Titre de la pull-request
        description:
          type: string
          description: description de la pull-resquest
        state:
          type: string
          description: etat de la pull-request
        createdDate:
          type: integer
          description: date de creation
          format: int64
        fromRef:
          type: string
          description: "d'où provient la pull-request"
        toRef:
          type: string
          description: vers où va la pull-request
    Issue:
      title: Issue
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        type:
          type: string
        state:
          type: string
        priority:
          type: string
      description: "Modèle d'une issue (Tiket) dans Jira"
      x-examples:
        ZDUP-59:
          - id: 151317
            key: ZDUP-59
            fields:
              created: '2020-03-11T10:07:58.000+0100'
              priority:
                iconUrl: 'https://jira-h.retraite.aa/images/icons/priorities/critical.svg'
                name: 1 - Critique
              issuetype:
                iconUrl: 'https://jira-h.retraite.aa/secure/viewavatar?size=xsmall&avatarId=12815&avatarType=issuetype'
                name: Récit
              status:
                iconUrl: 'https://jira-h.retraite.aa/images/icons/statuses/generic.png'
                name: Terminée
        ZDUP-58:
          - id: 136231
            key: ZDUP-58
            fields:
              created: '2019-11-26T17:59:50.000+0100'
              priority:
                iconUrl: 'https://jira-h.retraite.aa/images/icons/priorities/critical.svg'
                name: 1 - Critique
              issuetype:
                iconUrl: 'https://jira-h.retraite.aa/secure/viewavatar?size=xsmall&avatarId=12803&avatarType=issuetype'
                name: Anomalie
              status:
                iconUrl: 'https://jira-h.retraite.aa/images/icons/statuses/visible.png'
                name: En vérification
    Error:
      title: Error
      type: object
      properties:
        errorStatus:
          type: integer
        errorMessage:
          type: string
      description: "Modèle des codes d'erreurs"
      x-examples:
        Error 400:
          errorStatus: 400
          errorMessage: Bad request
        Error 503:
          errorStatus: 503
          errorMessage: Service unavailable
  securitySchemes:
    Basic Auth:
      type: http
      scheme: basic
